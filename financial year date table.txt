let
    Source = {Number.From(StartDate)..Number.From(EndDate)},
    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Changed Type" = Table.TransformColumnTypes(#"Converted to Table",{{"Column1", type date}}),
    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"Column1", "Date"}}),
    InsertedYear = Table.AddColumn(#"Renamed Columns", "Year", each Date.Year([Date]), Int64.Type),
    InsertedMonth = Table.AddColumn(InsertedYear, "Month", each Date.Month([Date]), Int64.Type),
    InsertedDay = Table.AddColumn(InsertedMonth, "Day", each Date.Day([Date]), Int64.Type),
    InsertedMonthName = Table.AddColumn(InsertedDay, "Month Name", each Date.ToText([Date],"MMM"), type text),
    InsertedEndofMonth = Table.AddColumn(InsertedMonthName, "End of Month", each Date.EndOfMonth([Date]), type date),
    InsertQuarter = Table.AddColumn(InsertedEndofMonth, "Quarter Num", each Date.QuarterOfYear([Date]), type number),
    InsertCalendarQtr = Table.AddColumn(InsertQuarter, "Quarter Year", each "Q" & Number.ToText([Quarter Num]) & " " & Number.ToText([Year]),type text),
    InsertCalendarQtrOrder = Table.AddColumn(InsertCalendarQtr, "Quarter Year Order", each [Year] * 10 + [Quarter Num], type number),
    InsertMonthYear = Table.AddColumn(InsertCalendarQtrOrder, "Month Year", each (try(Text.Range([Month Name],0,3)) otherwise [Month Name]) & " " & Number.ToText([Year]), type text),
    InsertMonthYearOrder = Table.AddColumn(InsertMonthYear, "Month Year Order", each [Year] * 100 + [Month], type number),
    InsertWeek = Table.AddColumn(InsertMonthYearOrder, "Week Num", each Date.WeekOfYear([Date]), type number),
    InsertCalendarWk = Table.AddColumn(InsertWeek, "Week Year", each "W" & Number.ToText([Week Num]) & " " & Number.ToText([Year]), type text),
    InsertCalendarWkOrder = Table.AddColumn(InsertCalendarWk, "Week Year Order", each [Year] * 100 + [Week Num], type number),
    InsertWeekEnding = Table.AddColumn(InsertCalendarWkOrder, "Week Ending", each Date.EndOfWeek([Date]), type date),
    InsertDayWeek = Table.AddColumn(InsertWeekEnding, "Day Num Week", each Date.DayOfWeek([Date]) + 1, type number),
    InsertWeekend = Table.AddColumn(InsertDayWeek, "Weekend", each if [Day Num Week] = 6 then "Y" else if [Day Num Week] = 7 then "Y" else "N", type text),
    InsertDayNameShort = Table.AddColumn(InsertWeekend, "Day Name Short", each Date.ToText([Date], "ddd"), type text),
    InsertIndex = Table.AddIndexColumn(InsertDayNameShort, "Index", 1, 1),
    InsertDayOfYear = Table.AddColumn(InsertIndex, "Day of Year", each Date.DayOfYear([Date]), type number),
    InsertCurrentDay = Table.AddColumn(InsertDayOfYear, "Current Day?", each Date.IsInCurrentDay([Date]), type logical),
    InsertCurrentWeek = Table.AddColumn(InsertCurrentDay, "Current Week?", each Date.IsInCurrentWeek([Date]), type logical),
    InsertCurrentMonth = Table.AddColumn(InsertCurrentWeek, "Current Month?", each Date.IsInCurrentMonth([Date]), type logical),
    InsertCurrentQuarter = Table.AddColumn(InsertCurrentMonth, "Current Quarter?", each Date.IsInCurrentQuarter([Date]), type logical),
    InsertCurrentYear = Table.AddColumn(InsertCurrentQuarter, "Current Year?", each Date.IsInCurrentYear([Date]), type logical),
    InsertCompletedDay = Table.AddColumn(InsertCurrentYear, "Completed Days", each if DateTime.Date(DateTime.LocalNow()) > [Date] then "Y" else "N", type text),
    InsertCompletedWeek = Table.AddColumn(InsertCompletedDay, "Completed Weeks", each if (Date.Year(DateTime.Date(DateTime.LocalNow())) > Date.Year([Date])) then "Y" else if (Date.Year(DateTime.Date(DateTime.LocalNow())) < Date.Year([Date])) then "N" else if (Date.WeekOfYear(DateTime.Date(DateTime.LocalNow())) > Date.WeekOfYear([Date])) then "Y" else "N", type text),
    InsertCompletedMonth = Table.AddColumn(InsertCompletedWeek, "Completed Months", each if (Date.Year(DateTime.Date(DateTime.LocalNow())) > Date.Year([Date])) then "Y" else if (Date.Year(DateTime.Date(DateTime.LocalNow())) < Date.Year([Date])) then "N" else if (Date.Month(DateTime.Date(DateTime.LocalNow())) > Date.Month([Date])) then "Y" else "N", type text),
    InsertCompletedQuarter = Table.AddColumn(InsertCompletedMonth, "Completed Quarters", each if (Date.Year(DateTime.Date(DateTime.LocalNow())) > Date.Year([Date])) then "Y" else if (Date.Year(DateTime.Date(DateTime.LocalNow())) < Date.Year([Date])) then "N" else if (Date.QuarterOfYear(DateTime.Date(DateTime.LocalNow())) > Date.QuarterOfYear([Date])) then "Y" else "N", type text),
    InsertCompletedYear = Table.AddColumn(InsertCompletedQuarter, "Completed Years", each if (Date.Year(DateTime.Date(DateTime.LocalNow())) > Date.Year([Date])) then "Y" else "N", type text),
    InsertFiscalYear = Table.AddColumn(InsertCompletedYear, "FY", each if [Month] >= StartOfFiscalYear then [Year] else [Year] -1, type number),
    InsertFinancialYearText = Table.AddColumn(InsertFiscalYear, "FYFull", each Number.ToText([FY]) & "/" & Number.ToText([FY] +1), type text),
    InsertFinancialQuarter = Table.AddColumn(InsertFinancialYearText, "FQ", each if [Month] = 4 or [Month] = 5 or [Month] = 6 then 1 
        else if [Month] = 7 or [Month] = 8 or [Month] = 9 then 2 
        else if [Month] = 10 or [Month] = 11  or [Month] = 12 then 3
        else 4, type number),
    InsertFQORder = Table.AddColumn(InsertFinancialQuarter, "FQ Year Order", each [FY] * 10 + [FQ], type number),
    InsertFQFY = Table.AddColumn(InsertFQORder, "FQ FY", each "FQtr "& Number.ToText([FQ]) & " " & [FYFull], type text),
    InsertFinancialMonth = Table.AddColumn(InsertFQFY, "Period", each if [Month] < StartOfFiscalYear then [Month] + 9 else [Month] - 3, type number),
    InsertFinancialMonthOrder = Table.AddColumn(InsertFinancialMonth, "Financial Month Year Order", each [FY] * 100 + [Period], type number),
    InsertFinanicalCalendarMonth = Table.AddColumn(InsertFinancialMonthOrder, "FMonth Year", each [Month Name] & " " & Number.ToText([Year]), type text),
    InsertFinancialPeriod = Table.AddColumn(InsertFinanicalCalendarMonth, "Financial Period", each if [Period] <= 6 then 1 else 2, type number),
    InsertFinancialPeriodOrder = Table.AddColumn(InsertFinancialPeriod, "FP FY Sort", each [FY] * 100 + [Financial Period], type number),
    InsertFinancialPeriodDescription = Table.AddColumn(InsertFinancialPeriodOrder, "FP FY", each "Period "& Number.ToText([Financial Period]) & ", " & [FYFull], type text),
    #"Changed Type1" = Table.TransformColumnTypes(InsertFinancialPeriodDescription,{{"FP FY Sort", Int64.Type}, {"Financial Period", Int64.Type}, {"Financial Month Year Order", Int64.Type}, {"Period", Int64.Type}, {"FQ Year Order", Int64.Type}, {"FQ", Int64.Type}, {"FY", Int64.Type}, {"Day of Year", Int64.Type}, {"Index", Int64.Type}, {"Day Num Week", Int64.Type}, {"Week Year Order", Int64.Type}, {"Week Num", Int64.Type}, {"Month Year Order", Int64.Type}, {"Quarter Year Order", Int64.Type}, {"Quarter Num", Int64.Type}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type1",{{"Month", "Month No."}, {"Day", "Day No."}, {"Month Name", "Month"}, {"Day Name Short", "Day"}, {"Day Num Week", "Dayof Week"}}),
    #"Removed Other Columns" = Table.SelectColumns(#"Renamed Columns1",{"Date", "Year", "Month No.", "Day No.", "Month", "End of Month", "Month Year", "Month Year Order", "Week Year", "Week Year Order", "Week Ending", "Dayof Week", "Weekend", "Current Day?", "Current Week?", "Current Month?", "FY", "FYFull", "Period", "Financial Month Year Order", "FMonth Year"})
in
    #"Removed Other Columns"